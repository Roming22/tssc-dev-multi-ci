{
  "apiVersion": "tekton.dev/v1",
  "kind": "Task",
  "metadata": {
    "name": "gather-deploy-images"
  },
  "spec": {
    "description": "Extract images from deployment YAML to pass to EC for validation",
    "workspaces": [
      {
        "description": "Should contain a cloned gitops repo at the ./source subpath",
        "name": "source"
      }
    ],
    "params": [
      {
        "name": "TARGET_BRANCH",
        "description": "If specified, will gather only the images that changed between the current revision and the target branch. Useful for pull requests. Note that the repository cloned on the source workspace must already contain the origin/$TARGET_BRANCH reference.\n",
        "type": "string",
        "default": ""
      }
    ],
    "results": [
      {
        "name": "IMAGES_TO_VERIFY",
        "description": "The images to be verified, in a format compatible with https://github.com/konflux-ci/build-definitions/tree/main/task/verify-enterprise-contract/0.1. When there are no images to verify, this is an empty string.\n"
      }
    ],
    "steps": [
      {
        "name": "get-images-per-env",
        "image": "quay.io/redhat-appstudio/appstudio-utils:5bd7d6cb0b17f9f2eab043a8ad16ba3d90551bc2@sha256:8c7fcf86af40c71aeb58e4279625c8308af5144e2f6b8e28b0ec7e795260e5f7",
        "workingDir": "$(workspaces.source.path)/source",
        "env": [
          {
            "name": "TARGET_BRANCH",
            "value": "$(params.TARGET_BRANCH)"
          }
        ],
        "script": "#!/bin/bash\nset -euo pipefail\n\nIMAGE_PATH='.spec.template.spec.containers[0].image'\ncomponent_name=$(yq .metadata.name application.yaml)\n\nfor env in development stage prod; do\n  yaml_path=components/${component_name}/overlays/${env}/deployment-patch.yaml\n  image=$(yq \"$IMAGE_PATH\" \"$yaml_path\")\n\n  if [ -n \"$TARGET_BRANCH\" ]; then\n    prev_image=$(git show \"origin/$TARGET_BRANCH:$yaml_path\" | yq \"$IMAGE_PATH\")\n    if [ \"$prev_image\" = \"$image\" ]; then\n      # don't check images that didn't change between the current revision and the target branch\n      continue\n    fi\n  fi\n\n  printf \"%s\\n\" \"$image\"\ndone | sort -u > /tmp/all-images.txt\n\nif [ ! -s /tmp/all-images.txt ]; then\n  echo \"No images to verify\"\n  touch $(results.IMAGES_TO_VERIFY.path)\n  exit 0\nfi\n\n# TODO: each component needs a {\"source\": {\"git\": {\"url\": \"...\", \"revision\": \"...\"}}}\n#       will that be too large for Tekton results?\n\njq --compact-output --raw-input --slurp < /tmp/all-images.txt '\n  # split input file\n  split(\"\\n\") |\n  # drop empty lines\n  map(select(length > 0)) |\n  # convert into EC-compatible format\n  {\n    \"components\": map({\"containerImage\": .})\n  }\n' | tee $(results.IMAGES_TO_VERIFY.path)\n"
      }
    ]
  }
}
