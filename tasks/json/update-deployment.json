{
  "apiVersion": "tekton.dev/v1",
  "kind": "Task",
  "metadata": {
    "name": "update-deployment"
  },
  "spec": {
    "description": "Task to update deployment with newly built image in gitops repository.",
    "params": [
      {
        "name": "gitops-repo-url",
        "type": "string",
        "description": "URL of gitops repository to update with the newly built image."
      },
      {
        "name": "image",
        "type": "string",
        "description": "Reference of the newly built image to use."
      },
      {
        "name": "gitops-auth-secret-name",
        "type": "string",
        "default": "gitops-auth-secret",
        "description": "Secret of basic-auth type containing credentials to commit into gitops repository.\n"
      }
    ],
    "volumes": [
      {
        "name": "gitops-auth-secret",
        "secret": {
          "secretName": "$(params.gitops-auth-secret-name)",
          "optional": true
        }
      }
    ],
    "steps": [
      {
        "name": "patch-gitops",
        "image": "quay.io/redhat-appstudio/appstudio-utils:5bd7d6cb0b17f9f2eab043a8ad16ba3d90551bc2@sha256:8c7fcf86af40c71aeb58e4279625c8308af5144e2f6b8e28b0ec7e795260e5f7",
        "volumeMounts": [
          {
            "name": "gitops-auth-secret",
            "mountPath": "/gitops-auth-secret"
          }
        ],
        "env": [
          {
            "name": "GITOPS_REPO_URL",
            "value": "$(params.gitops-repo-url)"
          },
          {
            "name": "PARAM_IMAGE",
            "value": "$(params.image)"
          }
        ],
        "script": "if test -f /gitops-auth-secret/password ; then\n  gitops_repo_url=${GITOPS_REPO_URL%'.git'}\n  remote_without_protocol=${gitops_repo_url#'https://'}\n\n  password=$(cat /gitops-auth-secret/password)\n  if test -f /gitops-auth-secret/username ; then\n    username=$(cat /gitops-auth-secret/username)\n    echo \"https://${username}:${password})@${hostname}\" > \"${HOME}/.git-credentials\"\n    origin_with_auth=https://${username}:${password}@${remote_without_protocol}.git\n  else\n    origin_with_auth=https://${password}@${remote_without_protocol}.git\n  fi\nelse\n  echo \"git credentials to push into gitops repository ${GITOPS_REPO_URL} is not configured.\"\n  echo \"gitops repository is not updated automatically.\"\n  echo \"You can update gitops repository with the new image: ${PARAM_IMAGE} manually\"\n  echo \"TODO: configure git credentials to update gitops repository.\"\n  exit 0\nfi\n\ngit config --global user.email \"rhtap@noreplay.com\"\ngit config --global user.name \"gitops-update\"\n\ngit clone ${GITOPS_REPO_URL}\ngitops_repo_name=$(basename ${gitops_repo_url})\ncd ${gitops_repo_name}\n\ncomponent_name=$(yq .metadata.name application.yaml)\ndeployment_patch_filepath=\"components/${component_name}/overlays/development/deployment-patch.yaml\"\nIMAGE_PATH='.spec.template.spec.containers[0].image'\nold_image=$(yq \"${IMAGE_PATH}\" \"${deployment_patch_filepath}\")\nyq e -i \"${IMAGE_PATH} |= \\\"${PARAM_IMAGE}\\\"\" \"${deployment_patch_filepath}\"\n\ngit add .\ngit commit -m \"Update '${component_name}' component image to: ${PARAM_IMAGE}\"\ngit remote set-url origin $origin_with_auth\ngit push 2> /dev/null || \\\n{\n  echo \"Failed to push update to gitops repository: ${GITOPS_REPO_URL}\"\n  echo 'Do you have correct git credentials configured?'\n  exit 1\n}\necho \"Successfully updated development image from ${old_image} to ${PARAM_IMAGE}\"\n"
      }
    ]
  }
}
